<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>백엔드 개발자 성장 로드맵</title>
      <link href="/2025/09/19/backend-developer-roadmap/"/>
      <url>/2025/09/19/backend-developer-roadmap/</url>
      
        <content type="html"><![CDATA[<h2 id="개요"><a href="#개요" class="headerlink" title="개요"></a>개요</h2><p>AI 시대에 살아남기 위한 백엔드 개발자의 체계적인 성장 계획입니다.</p><p>이론보다는 실무 중심으로, 단계별로 따라할 수 있도록 구성했습니다.</p><span id="more"></span><h2 id="전체-로드맵"><a href="#전체-로드맵" class="headerlink" title="전체 로드맵"></a>전체 로드맵</h2><h3 id="1단계-현황-분석-및-방향-설정"><a href="#1단계-현황-분석-및-방향-설정" class="headerlink" title="1단계: 현황 분석 및 방향 설정"></a>1단계: 현황 분석 및 방향 설정</h3><p><strong>목표</strong>: AI 시대 백엔드 개발자의 위치 파악 및 생존 전략 수립</p><ul><li><a href="/2025/09/17/ai-era-backend-developer-survival/">AI 시대, 백엔드 개발자가 살아남는 법</a><ul><li>AI 대체 위험도 분석</li><li>안전한 영역과 위험한 영역 구분</li><li>구체적인 전환 전략</li></ul></li></ul><h3 id="2단계-개발-환경-및-도구-마스터"><a href="#2단계-개발-환경-및-도구-마스터" class="headerlink" title="2단계: 개발 환경 및 도구 마스터"></a>2단계: 개발 환경 및 도구 마스터</h3><p><strong>목표</strong>: 효율적인 개발 환경 구축 및 기본 도구 숙련</p><ul><li><a href="/drafts/git-init-remote-push/">Git 저장소 초기화 및 관리</a> (Draft)<ul><li>프로젝트 시작부터 Git 연동까지</li><li>브랜치 전략 및 협업 방법</li><li>실무에서 자주 만나는 Git 문제 해결</li></ul></li></ul><h3 id="3단계-컨테이너-및-인프라-기초"><a href="#3단계-컨테이너-및-인프라-기초" class="headerlink" title="3단계: 컨테이너 및 인프라 기초"></a>3단계: 컨테이너 및 인프라 기초</h3><p><strong>목표</strong>: Docker 기반 개발 환경 구축</p><ul><li><a href="/drafts/redis-with-docker/">Redis With Docker 설정하기</a> (Draft)<ul><li>Docker 네트워크 구성</li><li>Redis 설정 및 Spring Boot 연동</li><li>개발환경에서 프로덕션까지</li></ul></li></ul><h3 id="4단계-CI-CD-파이프라인-구축"><a href="#4단계-CI-CD-파이프라인-구축" class="headerlink" title="4단계: CI&#x2F;CD 파이프라인 구축"></a>4단계: CI&#x2F;CD 파이프라인 구축</h3><p><strong>목표</strong>: 자동화된 빌드 및 배포 시스템 구축</p><ul><li><a href="/drafts/jenkins-docker-nexus-setup/">Jenkins With Docker &amp; Nexus 구축하기</a> (Draft)<ul><li>Jenkins와 Docker 연동</li><li>Private Registry 구축</li><li>완전 자동화된 CI&#x2F;CD 파이프라인</li></ul></li></ul><h3 id="5단계-컨테이너-오케스트레이션"><a href="#5단계-컨테이너-오케스트레이션" class="headerlink" title="5단계: 컨테이너 오케스트레이션"></a>5단계: 컨테이너 오케스트레이션</h3><p><strong>목표</strong>: Kubernetes 마스터 및 CKA 취득</p><ul><li><a href="/2025/09/17/kubernetes-learning-roadmap/">Kubernetes 마스터 플랜 (CKA 취득 목표)</a><ul><li>8주 학습 계획</li><li>실습 중심 학습법</li><li>CKA 시험 준비 전략</li></ul></li></ul><h3 id="6단계-고급-인프라-및-모니터링-예정"><a href="#6단계-고급-인프라-및-모니터링-예정" class="headerlink" title="6단계: 고급 인프라 및 모니터링 (예정)"></a>6단계: 고급 인프라 및 모니터링 (예정)</h3><p><strong>목표</strong>: 프로덕션 레벨 인프라 운영</p><ul><li>Prometheus &amp; Grafana 모니터링 구축 (작성 예정)</li><li>ELK Stack 로그 분석 시스템 (작성 예정)</li><li>AWS 클라우드 아키텍처 설계 (작성 예정)</li></ul><h3 id="7단계-고급-주제-및-전문성-예정"><a href="#7단계-고급-주제-및-전문성-예정" class="headerlink" title="7단계: 고급 주제 및 전문성 (예정)"></a>7단계: 고급 주제 및 전문성 (예정)</h3><p><strong>목표</strong>: 시니어 개발자로 성장</p><ul><li>Service Mesh (Istio) 도입 (작성 예정)</li><li>MLOps 파이프라인 구축 (작성 예정)</li><li>마이크로서비스 아키텍처 설계 (작성 예정)</li></ul><h2 id="학습-방법"><a href="#학습-방법" class="headerlink" title="학습 방법"></a>학습 방법</h2><h3 id="실습-중심-접근"><a href="#실습-중심-접근" class="headerlink" title="실습 중심 접근"></a>실습 중심 접근</h3><ul><li>모든 내용은 직접 따라할 수 있도록 구성</li><li>코드와 설정 파일 제공</li><li>트러블슈팅 가이드 포함</li></ul><h3 id="단계별-진행"><a href="#단계별-진행" class="headerlink" title="단계별 진행"></a>단계별 진행</h3><ul><li>이전 단계 완료 후 다음 단계 진행</li><li>각 단계별 체크리스트 제공</li><li>실무 적용 가능한 수준까지 학습</li></ul><h3 id="지속적-업데이트"><a href="#지속적-업데이트" class="headerlink" title="지속적 업데이트"></a>지속적 업데이트</h3><ul><li>새로운 기술 트렌드 반영</li><li>실무 경험 기반 내용 추가</li><li>커뮤니티 피드백 반영</li></ul><h2 id="예상-소요-시간"><a href="#예상-소요-시간" class="headerlink" title="예상 소요 시간"></a>예상 소요 시간</h2><table><thead><tr><th>단계</th><th>소요 시간</th><th>난이도</th></tr></thead><tbody><tr><td>1단계</td><td>1주</td><td>쉬움</td></tr><tr><td>2단계</td><td>1주</td><td>쉬움</td></tr><tr><td>3단계</td><td>2주</td><td>보통</td></tr><tr><td>4단계</td><td>3주</td><td>보통</td></tr><tr><td>5단계</td><td>8주</td><td>어려움</td></tr><tr><td>6단계</td><td>4주</td><td>어려움</td></tr><tr><td>7단계</td><td>지속적</td><td>매우 어려움</td></tr></tbody></table><p><strong>총 예상 기간</strong>: 약 5-6개월</p><h2 id="성공-지표"><a href="#성공-지표" class="headerlink" title="성공 지표"></a>성공 지표</h2><h3 id="단기-목표-3개월"><a href="#단기-목표-3개월" class="headerlink" title="단기 목표 (3개월)"></a>단기 목표 (3개월)</h3><ul><li>Docker 기반 개발 환경 구축 완료</li><li>CI&#x2F;CD 파이프라인 구축 및 운영</li><li>Kubernetes 기초 실력 확보</li></ul><h3 id="중기-목표-6개월"><a href="#중기-목표-6개월" class="headerlink" title="중기 목표 (6개월)"></a>중기 목표 (6개월)</h3><ul><li>CKA 자격증 취득</li><li>프로덕션 레벨 인프라 운영 경험</li><li>사내 기술 리더 역할 수행</li></ul><h3 id="장기-목표-12개월"><a href="#장기-목표-12개월" class="headerlink" title="장기 목표 (12개월)"></a>장기 목표 (12개월)</h3><ul><li>클라우드 아키텍트 수준 역량</li><li>기술 블로그 및 커뮤니티 활동</li><li>컨퍼런스 발표 또는 오픈소스 기여</li></ul><h2 id="추천-학습-순서"><a href="#추천-학습-순서" class="headerlink" title="추천 학습 순서"></a>추천 학습 순서</h2><ol><li><strong>현재 위치 파악</strong>: 1단계부터 차근차근</li><li><strong>기초 탄탄히</strong>: 2-3단계는 건너뛰지 말고 확실히</li><li><strong>실습 위주</strong>: 이론보다는 직접 해보기</li><li><strong>꾸준히 진행</strong>: 매일 조금씩이라도 진행</li><li><strong>기록하기</strong>: 학습 과정과 문제 해결 과정 기록</li></ol><hr><p><strong>시작일</strong>: 오늘부터<br><strong>목표</strong>: AI 시대에 살아남는 백엔드 개발자</p><p>함께 성장해나가자!</p>]]></content>
      
      
      <categories>
          
          <category> Career </category>
          
          <category> Roadmap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 백엔드개발자 </tag>
            
            <tag> DevOps </tag>
            
            <tag> 로드맵 </tag>
            
            <tag> 성장계획 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 저장소 초기화 및 리모트 연결</title>
      <link href="/2025/09/19/git-init-remote-push/"/>
      <url>/2025/09/19/git-init-remote-push/</url>
      
        <content type="html"><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><p>미리 깃 레포를 만들고 시작한 경우가 아니라 프로젝트 세팅이 먼저 된 후 깃 레포 생성된 경우</p><p>깃 저장소를 초기화 시킨 후 리모트 연결하여 포스 푸시하는 그것</p><span id="more"></span><h2 id="기본-설정"><a href="#기본-설정" class="headerlink" title="기본 설정"></a>기본 설정</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Git 저장소 초기화</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 리모트 저장소 연결</span></span><br><span class="line">git remote add origin &#123;깃 주소&#125;</span><br></pre></td></tr></table></figure><h2 id="파일-추가-및-커밋"><a href="#파일-추가-및-커밋" class="headerlink" title="파일 추가 및 커밋"></a>파일 추가 및 커밋</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 편의상 모든 파일을 추가하였으나 포함되면 안되는 파일등이 있는경우 .gitignore를 작성하여 제외</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 첫 커밋</span></span><br><span class="line">git commit -m <span class="string">&quot;Initial commit&quot;</span></span><br></pre></td></tr></table></figure><h2 id="브랜치-설정-및-푸시"><a href="#브랜치-설정-및-푸시" class="headerlink" title="브랜치 설정 및 푸시"></a>브랜치 설정 및 푸시</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 기본 브랜치를 main으로 설정 (최신 GitHub 기본값)</span></span><br><span class="line">git branch -M main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 강제 푸시 (리모트 저장소가 비어있지 않은 경우)</span></span><br><span class="line">git push -u origin main --force</span><br></pre></td></tr></table></figure><h2 id="gitignore-설정"><a href="#gitignore-설정" class="headerlink" title=".gitignore 설정"></a>.gitignore 설정</h2><p>프로젝트 타입별 .gitignore 예시:</p><h3 id="Java-Spring-Boot"><a href="#Java-Spring-Boot" class="headerlink" title="Java&#x2F;Spring Boot"></a>Java&#x2F;Spring Boot</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># Compiled class file</span><br><span class="line">*.class</span><br><span class="line"></span><br><span class="line"># Log file</span><br><span class="line">*.log</span><br><span class="line"></span><br><span class="line"># BlueJ files</span><br><span class="line">*.ctxt</span><br><span class="line"></span><br><span class="line"># Mobile Tools for Java (J2ME)</span><br><span class="line">.mtj.tmp/</span><br><span class="line"></span><br><span class="line"># Package Files</span><br><span class="line">*.jar</span><br><span class="line">*.war</span><br><span class="line">*.nar</span><br><span class="line">*.ear</span><br><span class="line">*.zip</span><br><span class="line">*.tar.gz</span><br><span class="line">*.rar</span><br><span class="line"></span><br><span class="line"># virtual machine crash logs</span><br><span class="line">hs_err_pid*</span><br><span class="line"></span><br><span class="line"># IDE</span><br><span class="line">.idea/</span><br><span class="line">*.iws</span><br><span class="line">*.iml</span><br><span class="line">*.ipr</span><br><span class="line">.vscode/</span><br><span class="line"></span><br><span class="line"># Maven</span><br><span class="line">target/</span><br><span class="line">pom.xml.tag</span><br><span class="line">pom.xml.releaseBackup</span><br><span class="line">pom.xml.versionsBackup</span><br><span class="line">pom.xml.next</span><br><span class="line">release.properties</span><br><span class="line">dependency-reduced-pom.xml</span><br><span class="line">buildNumber.properties</span><br><span class="line">.mvn/timing.properties</span><br><span class="line"></span><br><span class="line"># Gradle</span><br><span class="line">.gradle</span><br><span class="line">build/</span><br><span class="line">!gradle/wrapper/gradle-wrapper.jar</span><br><span class="line">!**/src/main/**/build/</span><br><span class="line">!**/src/test/**/build/</span><br><span class="line"></span><br><span class="line"># Spring Boot</span><br><span class="line">*.pid</span><br><span class="line">spring.log</span><br></pre></td></tr></table></figure><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"># Logs</span><br><span class="line">logs</span><br><span class="line">*.log</span><br><span class="line">npm-debug.log*</span><br><span class="line">yarn-debug.log*</span><br><span class="line">yarn-error.log*</span><br><span class="line"></span><br><span class="line"># Runtime data</span><br><span class="line">pids</span><br><span class="line">*.pid</span><br><span class="line">*.seed</span><br><span class="line">*.pid.lock</span><br><span class="line"></span><br><span class="line"># Directory for instrumented libs generated by jscoverage/JSCover</span><br><span class="line">lib-cov</span><br><span class="line"></span><br><span class="line"># Coverage directory used by tools like istanbul</span><br><span class="line">coverage/</span><br><span class="line"></span><br><span class="line"># nyc test coverage</span><br><span class="line">.nyc_output</span><br><span class="line"></span><br><span class="line"># Grunt intermediate storage</span><br><span class="line">.grunt</span><br><span class="line"></span><br><span class="line"># Bower dependency directory</span><br><span class="line">bower_components</span><br><span class="line"></span><br><span class="line"># node-waf configuration</span><br><span class="line">.lock-wscript</span><br><span class="line"></span><br><span class="line"># Compiled binary addons</span><br><span class="line">build/Release</span><br><span class="line"></span><br><span class="line"># Dependency directories</span><br><span class="line">node_modules/</span><br><span class="line">jspm_packages/</span><br><span class="line"></span><br><span class="line"># Optional npm cache directory</span><br><span class="line">.npm</span><br><span class="line"></span><br><span class="line"># Optional REPL history</span><br><span class="line">.node_repl_history</span><br><span class="line"></span><br><span class="line"># Output of &#x27;npm pack&#x27;</span><br><span class="line">*.tgz</span><br><span class="line"></span><br><span class="line"># Yarn Integrity file</span><br><span class="line">.yarn-integrity</span><br><span class="line"></span><br><span class="line"># dotenv environment variables file</span><br><span class="line">.env</span><br><span class="line"></span><br><span class="line"># IDE</span><br><span class="line">.vscode/</span><br><span class="line">.idea/</span><br></pre></td></tr></table></figure><h2 id="자주-사용하는-명령어"><a href="#자주-사용하는-명령어" class="headerlink" title="자주 사용하는 명령어"></a>자주 사용하는 명령어</h2><h3 id="리모트-저장소-확인"><a href="#리모트-저장소-확인" class="headerlink" title="리모트 저장소 확인"></a>리모트 저장소 확인</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 리모트 저장소 목록 확인</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 리모트 저장소 변경</span></span><br><span class="line">git remote set-url origin &#123;새로운 깃 주소&#125;</span><br></pre></td></tr></table></figure><h3 id="브랜치-관리"><a href="#브랜치-관리" class="headerlink" title="브랜치 관리"></a>브랜치 관리</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 현재 브랜치 확인</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 새 브랜치 생성 및 이동</span></span><br><span class="line">git checkout -b feature/new-feature</span><br><span class="line"></span><br><span class="line"><span class="comment"># 브랜치 푸시</span></span><br><span class="line">git push -u origin feature/new-feature</span><br></pre></td></tr></table></figure><h3 id="커밋-히스토리-정리"><a href="#커밋-히스토리-정리" class="headerlink" title="커밋 히스토리 정리"></a>커밋 히스토리 정리</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 마지막 커밋 메시지 수정</span></span><br><span class="line">git commit --amend -m <span class="string">&quot;새로운 커밋 메시지&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 여러 커밋을 하나로 합치기 (interactive rebase)</span></span><br><span class="line">git rebase -i HEAD~3</span><br></pre></td></tr></table></figure><h2 id="트러블슈팅"><a href="#트러블슈팅" class="headerlink" title="트러블슈팅"></a>트러블슈팅</h2><h3 id="자주-발생하는-문제들"><a href="#자주-발생하는-문제들" class="headerlink" title="자주 발생하는 문제들"></a>자주 발생하는 문제들</h3><p><strong>리모트 저장소에 이미 파일이 있는 경우</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 리모트 내용을 가져온 후 병합</span></span><br><span class="line">git pull origin main --allow-unrelated-histories</span><br><span class="line"></span><br><span class="line"><span class="comment"># 또는 강제 푸시</span></span><br><span class="line">git push -u origin main --force</span><br></pre></td></tr></table></figure><p><strong>파일이 너무 큰 경우</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Git LFS 설치 및 설정</span></span><br><span class="line">git lfs install</span><br><span class="line">git lfs track <span class="string">&quot;*.zip&quot;</span></span><br><span class="line">git lfs track <span class="string">&quot;*.jar&quot;</span></span><br><span class="line">git add .gitattributes</span><br></pre></td></tr></table></figure><p><strong>권한 문제</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SSH 키 생성</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH 키를 GitHub에 등록 후 SSH URL 사용</span></span><br><span class="line">git remote set-url origin git@github.com:username/repository.git</span><br></pre></td></tr></table></figure><h2 id="팀-작업시-권장사항"><a href="#팀-작업시-권장사항" class="headerlink" title="팀 작업시 권장사항"></a>팀 작업시 권장사항</h2><h3 id="브랜치-전략"><a href="#브랜치-전략" class="headerlink" title="브랜치 전략"></a>브랜치 전략</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 기능 개발시</span></span><br><span class="line">git checkout -b feature/login-system</span><br><span class="line">git push -u origin feature/login-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 버그 수정시</span></span><br><span class="line">git checkout -b hotfix/critical-bug</span><br><span class="line">git push -u origin hotfix/critical-bug</span><br></pre></td></tr></table></figure><h3 id="커밋-메시지-컨벤션"><a href="#커밋-메시지-컨벤션" class="headerlink" title="커밋 메시지 컨벤션"></a>커밋 메시지 컨벤션</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 좋은 커밋 메시지 예시</span></span><br><span class="line">git commit -m <span class="string">&quot;feat: 사용자 로그인 기능 추가&quot;</span></span><br><span class="line">git commit -m <span class="string">&quot;fix: 비밀번호 검증 로직 수정&quot;</span></span><br><span class="line">git commit -m <span class="string">&quot;docs: README 파일 업데이트&quot;</span></span><br><span class="line">git commit -m <span class="string">&quot;refactor: 사용자 서비스 코드 리팩토링&quot;</span></span><br></pre></td></tr></table></figure><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>프로젝트를 먼저 만들고 나중에 Git을 연결하는 경우가 생각보다 많다.</p><p>이때 위의 순서대로 하면 문제없이 연결할 수 있다.</p><p>특히 .gitignore 설정을 미리 해두는 것이 중요하다.</p><h2 id="다음-단계"><a href="#다음-단계" class="headerlink" title="다음 단계"></a>다음 단계</h2><p>Git 환경이 준비되었으니 이제 개발에 필요한 인프라를 구축해보자.</p><p>다음 글에서는 Redis를 Docker로 설정하는 방법을 다룰 예정이다.</p><p><strong>전체 로드맵</strong>: <a href="/2025/09/19/backend-developer-roadmap/">백엔드 개발자 성장 로드맵</a><br><strong>다음 글</strong>: Redis With Docker 설정하기</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
          <category> 개발도구 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
            <tag> 버전관리 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis With Docker 설정하기</title>
      <link href="/2025/09/19/redis-with-docker/"/>
      <url>/2025/09/19/redis-with-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="Redis-Docker로-설치하기"><a href="#Redis-Docker로-설치하기" class="headerlink" title="Redis Docker로 설치하기"></a>Redis Docker로 설치하기</h2><p>알파인 리눅스 기반의 레디스를 설치해보자.</p><span id="more"></span><h2 id="Redis-이미지-다운로드"><a href="#Redis-이미지-다운로드" class="headerlink" title="Redis 이미지 다운로드"></a>Redis 이미지 다운로드</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 알파인 리눅스 기반의 레디스 설치</span></span><br><span class="line">docker pull redis:alpine</span><br></pre></td></tr></table></figure><h2 id="도커-네트워크-설정"><a href="#도커-네트워크-설정" class="headerlink" title="도커 네트워크 설정"></a>도커 네트워크 설정</h2><p>도커 네트워크를 구성하는 이유는 IP기반이 아닌 도커 이미지 이름 등으로 내부 이미지들의 공유 네트워크를 만들기 위함이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 도커 네트워크 생성</span></span><br><span class="line">docker network create redis-network</span><br><span class="line"></span><br><span class="line"><span class="comment"># 네트워크 확인</span></span><br><span class="line">docker network <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h2 id="Redis-컨테이너-실행"><a href="#Redis-컨테이너-실행" class="headerlink" title="Redis 컨테이너 실행"></a>Redis 컨테이너 실행</h2><h3 id="기본-실행"><a href="#기본-실행" class="headerlink" title="기본 실행"></a>기본 실행</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 기본 Redis 컨테이너 실행</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name redis-server \</span><br><span class="line">  --network redis-network \</span><br><span class="line">  -p 6379:6379 \</span><br><span class="line">  redis:alpine</span><br></pre></td></tr></table></figure><h3 id="설정-파일과-함께-실행"><a href="#설정-파일과-함께-실행" class="headerlink" title="설정 파일과 함께 실행"></a>설정 파일과 함께 실행</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis 설정 파일 생성</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/redis/conf</span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/redis/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># redis.conf 파일 생성</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /opt/redis/conf/redis.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string"># Redis 설정</span></span><br><span class="line"><span class="string">bind 0.0.0.0</span></span><br><span class="line"><span class="string">port 6379</span></span><br><span class="line"><span class="string">timeout 0</span></span><br><span class="line"><span class="string">tcp-keepalive 300</span></span><br><span class="line"><span class="string">daemonize no</span></span><br><span class="line"><span class="string">supervised no</span></span><br><span class="line"><span class="string">pidfile /var/run/redis_6379.pid</span></span><br><span class="line"><span class="string">loglevel notice</span></span><br><span class="line"><span class="string">logfile &quot;&quot;</span></span><br><span class="line"><span class="string">databases 16</span></span><br><span class="line"><span class="string">save 900 1</span></span><br><span class="line"><span class="string">save 300 10</span></span><br><span class="line"><span class="string">save 60 10000</span></span><br><span class="line"><span class="string">stop-writes-on-bgsave-error yes</span></span><br><span class="line"><span class="string">rdbcompression yes</span></span><br><span class="line"><span class="string">rdbchecksum yes</span></span><br><span class="line"><span class="string">dbfilename dump.rdb</span></span><br><span class="line"><span class="string">dir ./</span></span><br><span class="line"><span class="string">requirepass yourpassword</span></span><br><span class="line"><span class="string">maxmemory 256mb</span></span><br><span class="line"><span class="string">maxmemory-policy allkeys-lru</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 설정 파일과 함께 Redis 실행</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name redis-server \</span><br><span class="line">  --network redis-network \</span><br><span class="line">  -p 6379:6379 \</span><br><span class="line">  -v /opt/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf \</span><br><span class="line">  -v /opt/redis/data:/data \</span><br><span class="line">  redis:alpine redis-server /usr/local/etc/redis/redis.conf</span><br></pre></td></tr></table></figure><h2 id="Redis-클라이언트-연결"><a href="#Redis-클라이언트-연결" class="headerlink" title="Redis 클라이언트 연결"></a>Redis 클라이언트 연결</h2><h3 id="Docker로-Redis-CLI-사용"><a href="#Docker로-Redis-CLI-사용" class="headerlink" title="Docker로 Redis CLI 사용"></a>Docker로 Redis CLI 사용</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis CLI 컨테이너로 접속</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">  --network redis-network \</span><br><span class="line">  redis:alpine redis-cli -h redis-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 비밀번호가 설정된 경우</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">  --network redis-network \</span><br><span class="line">  redis:alpine redis-cli -h redis-server -a yourpassword</span><br></pre></td></tr></table></figure><h3 id="기본-Redis-명령어-테스트"><a href="#기본-Redis-명령어-테스트" class="headerlink" title="기본 Redis 명령어 테스트"></a>기본 Redis 명령어 테스트</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 문자열 저장/조회</span></span><br><span class="line">127.0.0.1:6379&gt; SET mykey <span class="string">&quot;Hello Redis&quot;</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; GET mykey</span><br><span class="line"><span class="string">&quot;Hello Redis&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 해시 저장/조회</span></span><br><span class="line">127.0.0.1:6379&gt; HSET user:1 name <span class="string">&quot;John&quot;</span> age 30</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; HGET user:1 name</span><br><span class="line"><span class="string">&quot;John&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; HGETALL user:1</span><br><span class="line">1) <span class="string">&quot;name&quot;</span></span><br><span class="line">2) <span class="string">&quot;John&quot;</span></span><br><span class="line">3) <span class="string">&quot;age&quot;</span></span><br><span class="line">4) <span class="string">&quot;30&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 리스트 조작</span></span><br><span class="line">127.0.0.1:6379&gt; LPUSH mylist <span class="string">&quot;world&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; LPUSH mylist <span class="string">&quot;hello&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; LRANGE mylist 0 -1</span><br><span class="line">1) <span class="string">&quot;hello&quot;</span></span><br><span class="line">2) <span class="string">&quot;world&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Spring-Boot와-연동"><a href="#Spring-Boot와-연동" class="headerlink" title="Spring Boot와 연동"></a>Spring Boot와 연동</h2><h3 id="application-yml-설정"><a href="#application-yml-설정" class="headerlink" title="application.yml 설정"></a>application.yml 설정</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">yourpassword</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">2000ms</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="RedisTemplate-설정"><a href="#RedisTemplate-설정" class="headerlink" title="RedisTemplate 설정"></a>RedisTemplate 설정</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisConnectionFactory <span class="title function_">redisConnectionFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">LettuceConnectionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LettuceConnectionFactory</span>(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">RedisStandaloneConfiguration</span>(<span class="string">&quot;localhost&quot;</span>, <span class="number">6379</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        template.setConnectionFactory(redisConnectionFactory());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// JSON 직렬화 설정</span></span><br><span class="line">        template.setDefaultSerializer(<span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>());</span><br><span class="line">        template.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        template.setHashKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        template.setValueSerializer(<span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CacheManager <span class="title function_">cacheManager</span><span class="params">()</span> &#123;</span><br><span class="line">        RedisCacheManager.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> RedisCacheManager</span><br><span class="line">            .RedisCacheManagerBuilder</span><br><span class="line">            .fromConnectionFactory(redisConnectionFactory())</span><br><span class="line">            .cacheDefaults(cacheConfiguration(Duration.ofMinutes(<span class="number">10</span>)));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RedisCacheConfiguration <span class="title function_">cacheConfiguration</span><span class="params">(Duration ttl)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RedisCacheConfiguration.defaultCacheConfig()</span><br><span class="line">            .entryTtl(ttl)</span><br><span class="line">            .disableCachingNullValues()</span><br><span class="line">            .serializeKeysWith(RedisSerializationContext.SerializationPair</span><br><span class="line">                .fromSerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>()))</span><br><span class="line">            .serializeValuesWith(RedisSerializationContext.SerializationPair</span><br><span class="line">                .fromSerializer(<span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Docker-Compose로-관리"><a href="#Docker-Compose로-관리" class="headerlink" title="Docker Compose로 관리"></a>Docker Compose로 관리</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-server</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis/data:/data</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">/usr/local/etc/redis/redis.conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">app-network</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">spring-app</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_REDIS_HOST=redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_REDIS_PORT=6379</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">app-network</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">app-network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><h2 id="모니터링"><a href="#모니터링" class="headerlink" title="모니터링"></a>모니터링</h2><h3 id="Redis-상태-확인"><a href="#Redis-상태-확인" class="headerlink" title="Redis 상태 확인"></a>Redis 상태 확인</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis 정보 확인</span></span><br><span class="line">docker <span class="built_in">exec</span> redis-server redis-cli info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 메모리 사용량 확인</span></span><br><span class="line">docker <span class="built_in">exec</span> redis-server redis-cli info memory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 연결된 클라이언트 확인</span></span><br><span class="line">docker <span class="built_in">exec</span> redis-server redis-cli client list</span><br></pre></td></tr></table></figure><h3 id="성능-모니터링"><a href="#성능-모니터링" class="headerlink" title="성능 모니터링"></a>성능 모니터링</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis 실시간 모니터링</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis-server redis-cli --latency</span><br><span class="line"></span><br><span class="line"><span class="comment"># 슬로우 쿼리 로그 확인</span></span><br><span class="line">docker <span class="built_in">exec</span> redis-server redis-cli slowlog get 10</span><br></pre></td></tr></table></figure><h2 id="백업-및-복구"><a href="#백업-및-복구" class="headerlink" title="백업 및 복구"></a>백업 및 복구</h2><h3 id="데이터-백업"><a href="#데이터-백업" class="headerlink" title="데이터 백업"></a>데이터 백업</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RDB 백업 생성</span></span><br><span class="line">docker <span class="built_in">exec</span> redis-server redis-cli BGSAVE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 백업 파일 복사</span></span><br><span class="line">docker <span class="built_in">cp</span> redis-server:/data/dump.rdb ./backup/</span><br></pre></td></tr></table></figure><h3 id="데이터-복구"><a href="#데이터-복구" class="headerlink" title="데이터 복구"></a>데이터 복구</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 백업 파일 복사</span></span><br><span class="line">docker <span class="built_in">cp</span> ./backup/dump.rdb redis-server:/data/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redis 재시작</span></span><br><span class="line">docker restart redis-server</span><br></pre></td></tr></table></figure><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>Docker를 사용하면 Redis를 쉽게 설치하고 관리할 수 있다.</p><p>특히 개발 환경에서는 Docker Compose를 사용해서 애플리케이션과 함께 관리하는 것이 편리하다.</p><p>프로덕션 환경에서는 Redis Cluster나 Sentinel을 고려해보자.</p><h2 id="다음-단계"><a href="#다음-단계" class="headerlink" title="다음 단계"></a>다음 단계</h2><p>Redis 환경이 준비되었으니 이제 CI&#x2F;CD 파이프라인을 구축해보자.</p><p>다음 글에서는 Jenkins와 Docker, Nexus를 연동한 완전 자동화된 빌드 및 배포 시스템을 만들어보겠다.</p><p><strong>전체 로드맵</strong>: <a href="/2025/09/19/backend-developer-roadmap/">백엔드 개발자 성장 로드맵</a><br><strong>다음 글</strong>: Jenkins With Docker &amp; Nexus 구축하기</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> Redis </category>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
            <tag> 캐시 </tag>
            
            <tag> 데이터베이스 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins With Docker &amp; Nexus 구축하기</title>
      <link href="/2025/09/19/jenkins-docker-nexus-setup/"/>
      <url>/2025/09/19/jenkins-docker-nexus-setup/</url>
      
        <content type="html"><![CDATA[<h2 id="전제-조건"><a href="#전제-조건" class="headerlink" title="전제 조건"></a>전제 조건</h2><p>Jenkins와 Nexus가 이미 구축되어있다는 전제하에 진행합니다.</p><span id="more"></span><h2 id="Nexus-Docker-Repository-생성"><a href="#Nexus-Docker-Repository-생성" class="headerlink" title="Nexus Docker Repository 생성"></a>Nexus Docker Repository 생성</h2><p>먼저 Nexus에 Docker Hub, Repository를 만들어줍니다.</p><h3 id="Blob-Stores-생성"><a href="#Blob-Stores-생성" class="headerlink" title="Blob Stores 생성"></a>Blob Stores 생성</h3><p>위와같이 Blob Stores를 생성합니다.</p><h3 id="Repository-생성"><a href="#Repository-생성" class="headerlink" title="Repository 생성"></a>Repository 생성</h3><p>docker의 </p><p>Proxy로 사용할 녀석 하나(hub) &#x2F; Storage로 사용할 녀석 하나(hosted)</p><p>이렇게 총 2개를 만들어줍니다.</p><p><strong>Docker Hub Proxy 생성</strong></p><p>Name: docker-hub<br>Repository Connectors에서 HTTP: 8082 포트로 설정<br>Docker Index: Use Docker Hub</p><p><strong>Docker Hosted 생성</strong></p><p>Name: docker-hosted<br>Repository Connectors에서 HTTP: 8083 포트로 설정<br>Allow anonymous docker pull: 체크</p><h2 id="Jenkins-설정"><a href="#Jenkins-설정" class="headerlink" title="Jenkins 설정"></a>Jenkins 설정</h2><h3 id="Docker-플러그인-설치"><a href="#Docker-플러그인-설치" class="headerlink" title="Docker 플러그인 설치"></a>Docker 플러그인 설치</h3><p>Jenkins 관리 &gt; 플러그인 관리에서 다음 플러그인들을 설치합니다:</p><ul><li>Docker Pipeline</li><li>Docker plugin</li></ul><h3 id="Nexus-연동-설정"><a href="#Nexus-연동-설정" class="headerlink" title="Nexus 연동 설정"></a>Nexus 연동 설정</h3><p><strong>Credentials 추가</strong></p><p>Jenkins 관리 &gt; Manage Credentials에서 Nexus 계정 정보를 추가합니다.</p><p>Kind: Username with password<br>Username: nexus 계정<br>Password: nexus 비밀번호<br>ID: nexus-credentials</p><h3 id="Pipeline-스크립트-작성"><a href="#Pipeline-스크립트-작성" class="headerlink" title="Pipeline 스크립트 작성"></a>Pipeline 스크립트 작성</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    </span><br><span class="line">    environment &#123;</span><br><span class="line">        NEXUS_URL = <span class="string">&#x27;your-nexus-url:8083&#x27;</span></span><br><span class="line">        NEXUS_CREDENTIALS = <span class="string">&#x27;nexus-credentials&#x27;</span></span><br><span class="line">        IMAGE_NAME = <span class="string">&#x27;your-app&#x27;</span></span><br><span class="line">        IMAGE_TAG = <span class="string">&quot;$&#123;BUILD_NUMBER&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Checkout&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                git <span class="attr">branch:</span> <span class="string">&#x27;main&#x27;</span>, <span class="attr">url:</span> <span class="string">&#x27;https://github.com/your-repo/your-app.git&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        stage(<span class="string">&#x27;Build Docker Image&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    docker.build(<span class="string">&quot;$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        stage(<span class="string">&#x27;Push to Nexus&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    docker.withRegistry(<span class="string">&quot;http://$&#123;NEXUS_URL&#125;&quot;</span>, <span class="string">&quot;$&#123;NEXUS_CREDENTIALS&#125;&quot;</span>) &#123;</span><br><span class="line">                        docker.image(<span class="string">&quot;$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125;&quot;</span>).push()</span><br><span class="line">                        docker.image(<span class="string">&quot;$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125;&quot;</span>).push(<span class="string">&quot;latest&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        stage(<span class="string">&#x27;Clean up&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    sh <span class="string">&quot;docker rmi $&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125;&quot;</span></span><br><span class="line">                    sh <span class="string">&quot;docker rmi $&#123;NEXUS_URL&#125;/$&#123;IMAGE_NAME&#125;:$&#123;IMAGE_TAG&#125;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            cleanWs()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Docker-설정"><a href="#Docker-설정" class="headerlink" title="Docker 설정"></a>Docker 설정</h2><h3 id="Jenkins-서버에서-Docker-설정"><a href="#Jenkins-서버에서-Docker-설정" class="headerlink" title="Jenkins 서버에서 Docker 설정"></a>Jenkins 서버에서 Docker 설정</h3><p>Jenkins가 Docker를 사용할 수 있도록 권한을 설정합니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Jenkins 사용자를 docker 그룹에 추가</span></span><br><span class="line"><span class="built_in">sudo</span> usermod -aG docker jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># Jenkins 서비스 재시작</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl restart jenkins</span><br></pre></td></tr></table></figure><h3 id="Nexus-Registry-인증-설정"><a href="#Nexus-Registry-인증-설정" class="headerlink" title="Nexus Registry 인증 설정"></a>Nexus Registry 인증 설정</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker daemon에서 insecure registry 설정</span></span><br><span class="line"><span class="built_in">sudo</span> vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;your-nexus-url:8082&quot;</span><span class="punctuation">,</span> <span class="string">&quot;your-nexus-url:8083&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker 서비스 재시작</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h2><h3 id="수동으로-이미지-Push-Pull-테스트"><a href="#수동으로-이미지-Push-Pull-테스트" class="headerlink" title="수동으로 이미지 Push&#x2F;Pull 테스트"></a>수동으로 이미지 Push&#x2F;Pull 테스트</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nexus registry 로그인</span></span><br><span class="line">docker login your-nexus-url:8083</span><br><span class="line"></span><br><span class="line"><span class="comment"># 이미지 태그</span></span><br><span class="line">docker tag nginx:latest your-nexus-url:8083/nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 이미지 푸시</span></span><br><span class="line">docker push your-nexus-url:8083/nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 이미지 풀</span></span><br><span class="line">docker pull your-nexus-url:8083/nginx:latest</span><br></pre></td></tr></table></figure><h3 id="Jenkins-Job-실행"><a href="#Jenkins-Job-실행" class="headerlink" title="Jenkins Job 실행"></a>Jenkins Job 실행</h3><ol><li>Jenkins에서 새로운 Pipeline Job 생성</li><li>Pipeline script를 위에서 작성한 스크립트로 설정</li><li>Build Now 실행</li><li>Console Output에서 빌드 과정 확인</li></ol><h2 id="트러블슈팅"><a href="#트러블슈팅" class="headerlink" title="트러블슈팅"></a>트러블슈팅</h2><h3 id="자주-발생하는-문제들"><a href="#자주-발생하는-문제들" class="headerlink" title="자주 발생하는 문제들"></a>자주 발생하는 문제들</h3><p><strong>Docker 권한 문제</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Jenkins 사용자가 docker 명령어를 실행할 수 없는 경우</span></span><br><span class="line"><span class="built_in">sudo</span> usermod -aG docker jenkins</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart jenkins</span><br></pre></td></tr></table></figure><p><strong>Nexus 연결 문제</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># insecure registry 설정 확인</span></span><br><span class="line"><span class="built_in">cat</span> /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker daemon 재시작</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></table></figure><p><strong>이미지 푸시 실패</strong></p><ul><li>Nexus Repository의 Deployment Policy가 Allow redeploy로 설정되어 있는지 확인</li><li>Nexus 사용자 권한 확인</li></ul><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>Jenkins와 Docker, Nexus를 연동하면 완전한 CI&#x2F;CD 파이프라인을 구축할 수 있다.</p><p>특히 Private Registry를 사용하면 보안성과 속도 면에서 장점이 크다.</p><h2 id="다음-단계"><a href="#다음-단계" class="headerlink" title="다음 단계"></a>다음 단계</h2><p>CI&#x2F;CD 파이프라인이 구축되었으니 이제 컨테이너 오케스트레이션을 학습해보자.</p><p>다음 글에서는 Kubernetes를 마스터하고 CKA 자격증을 취득하는 계획을 다룰 예정이다.</p><p><strong>전체 로드맵</strong>: <a href="/2025/09/19/backend-developer-roadmap/">백엔드 개발자 성장 로드맵</a><br><strong>다음 글</strong>: <a href="/2025/09/17/kubernetes-learning-roadmap/">Kubernetes 마스터 플랜</a></p>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
          <category> Jenkins </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DevOps </tag>
            
            <tag> Jenkins </tag>
            
            <tag> Docker </tag>
            
            <tag> Nexus </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 마스터 플랜 (CKA 취득 목표)</title>
      <link href="/2025/09/17/kubernetes-learning-roadmap/"/>
      <url>/2025/09/17/kubernetes-learning-roadmap/</url>
      
        <content type="html"><![CDATA[<h2 id="목표-8주-만에-CKA-취득"><a href="#목표-8주-만에-CKA-취득" class="headerlink" title="목표: 8주 만에 CKA 취득"></a>목표: 8주 만에 CKA 취득</h2><p><strong>최종 목표:</strong></p><ul><li>CKA (Certified Kubernetes Administrator) 취득</li><li>실무에서 바로 쓸 수 있는 K8s 운영 능력</li><li>클라우드 네이티브 아키텍처 설계 역량</li></ul><p><strong>학습 방식:</strong> 이론 30% + 실습 70%</p><span id="more"></span><h2 id="8주-학습-계획"><a href="#8주-학습-계획" class="headerlink" title="8주 학습 계획"></a>8주 학습 계획</h2><h3 id="Week-1-2-기초-다지기"><a href="#Week-1-2-기초-다지기" class="headerlink" title="Week 1-2: 기초 다지기"></a>Week 1-2: 기초 다지기</h3><p><strong>환경 구축</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 로컬 K8s 환경</span></span><br><span class="line">kubectl version --client</span><br><span class="line"></span><br><span class="line"><span class="comment"># kind로 실습 클러스터 생성</span></span><br><span class="line">kind create cluster --name cka-practice</span><br><span class="line">kubectl cluster-info --context kind-cka-practice</span><br></pre></td></tr></table></figure><p><strong>핵심 리소스</strong></p><ul><li>Pod, ReplicaSet, Deployment</li><li>Service (ClusterIP, NodePort, LoadBalancer)</li><li>Ingress, ConfigMap, Secret, Namespace</li></ul><p><strong>실습 예제</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.21</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;64Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;250m&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;128Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Week-3-4-고급-기능"><a href="#Week-3-4-고급-기능" class="headerlink" title="Week 3-4: 고급 기능"></a>Week 3-4: 고급 기능</h3><p><strong>스토리지, 네트워킹, 보안</strong></p><ul><li>PersistentVolume, PersistentVolumeClaim</li><li>StorageClass (동적 프로비저닝)</li><li>NetworkPolicy, RBAC, SecurityContext</li></ul><p><strong>RBAC 예제</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h3 id="Week-5-6-클러스터-운영"><a href="#Week-5-6-클러스터-운영" class="headerlink" title="Week 5-6: 클러스터 운영"></a>Week 5-6: 클러스터 운영</h3><p><strong>핵심 스킬</strong></p><ul><li>클러스터 업그레이드 (kubeadm)</li><li>etcd 백업 및 복구</li><li>로깅 및 모니터링</li><li>트러블슈팅</li></ul><p><strong>etcd 백업 (CKA 시험 필수!)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ETCDCTL_API=3 etcdctl snapshot save /tmp/etcd-backup.db \</span><br><span class="line">  --endpoints=https://127.0.0.1:2379 \</span><br><span class="line">  --cacert=/etc/kubernetes/pki/etcd/ca.crt \</span><br><span class="line">  --cert=/etc/kubernetes/pki/etcd/server.crt \</span><br><span class="line">  --key=/etc/kubernetes/pki/etcd/server.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 복구</span></span><br><span class="line">ETCDCTL_API=3 etcdctl snapshot restore /tmp/etcd-backup.db \</span><br><span class="line">  --data-dir=/var/lib/etcd-backup</span><br></pre></td></tr></table></figure><h3 id="Week-7-8-CKA-시험-준비"><a href="#Week-7-8-CKA-시험-준비" class="headerlink" title="Week 7-8: CKA 시험 준비"></a>Week 7-8: CKA 시험 준비</h3><p><strong>시험 도메인</strong></p><ol><li>클러스터 아키텍처, 설치 및 구성 (25%)</li><li>워크로드 및 스케줄링 (15%)  </li><li>서비스 및 네트워킹 (20%)</li><li>스토리지 (10%)</li><li>트러블슈팅 (30%)</li></ol><h2 id="학습-리소스"><a href="#학습-리소스" class="headerlink" title="학습 리소스"></a>학습 리소스</h2><p><strong>필수 (무료)</strong></p><ul><li>Kubernetes 공식 문서</li><li>kubectl Cheat Sheet</li><li>GitHub 실습 레포</li></ul><p><strong>유료 (추천)</strong></p><ul><li>Udemy - Mumshad Mannambeth “CKA with Practice Tests”</li><li>A Cloud Guru “Certified Kubernetes Administrator”</li></ul><p><strong>실습 환경</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 로컬 (개발/학습)</span></span><br><span class="line">kind create cluster --config=multi-node-config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 클라우드 (실전 연습)  </span></span><br><span class="line"><span class="comment"># AWS EKS, GCP GKE 중 선택</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 가상머신 (시험 환경과 동일)</span></span><br><span class="line"><span class="comment"># VirtualBox + Ubuntu 3노드 클러스터</span></span><br></pre></td></tr></table></figure><h2 id="주간-체크리스트"><a href="#주간-체크리스트" class="headerlink" title="주간 체크리스트"></a>주간 체크리스트</h2><h3 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h3><ul><li>kubectl 기본 명령어 50개 암기</li><li>Pod 생성&#x2F;삭제&#x2F;수정 1분 내 완료</li><li>Service로 Pod 노출</li><li>ConfigMap&#x2F;Secret 활용</li></ul><h3 id="Week-2"><a href="#Week-2" class="headerlink" title="Week 2"></a>Week 2</h3><ul><li>Deployment 롤링 업데이트</li><li>Ingress 외부 트래픽 라우팅</li><li>Namespace 멀티 테넌트 구성</li></ul><h3 id="Week-3-4"><a href="#Week-3-4" class="headerlink" title="Week 3-4"></a>Week 3-4</h3><ul><li>PV&#x2F;PVC 동적 프로비저닝</li><li>RBAC 세밀한 권한 관리</li><li>NetworkPolicy 마이크로세그멘테이션</li></ul><h3 id="Week-5-6"><a href="#Week-5-6" class="headerlink" title="Week 5-6"></a>Week 5-6</h3><ul><li>etcd 백업&#x2F;복구 10회 이상 연습</li><li>클러스터 업그레이드 시나리오</li><li>장애 트러블슈팅 20개 케이스</li></ul><h3 id="Week-7-8"><a href="#Week-7-8" class="headerlink" title="Week 7-8"></a>Week 7-8</h3><ul><li>Killer.sh 모의시험 5회 이상 (80점 이상)</li><li>시험 환경 실전 연습</li><li>CKA 시험 접수 및 응시</li></ul><h2 id="실무-적용"><a href="#실무-적용" class="headerlink" title="실무 적용"></a>실무 적용</h2><h3 id="사내-프로젝트-제안"><a href="#사내-프로젝트-제안" class="headerlink" title="사내 프로젝트 제안"></a>사내 프로젝트 제안</h3><p><strong>1단계: 기존 서비스 컨테이너화</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">11</span>-jre-slim</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> target/app.jar app.jar</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><p><strong>2단계: K8s 매니페스트</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">spring-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">spring-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">spring-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">myregistry/spring-app:latest</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p><strong>3단계: CI&#x2F;CD 파이프라인</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">Kubernetes</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">main</span>]</span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">K8s</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          kubectl set image deployment/spring-app app=myregistry/spring-app:$&#123;&#123; github.sha &#125;&#125;</span></span><br><span class="line"><span class="string">          kubectl rollout status deployment/spring-app</span></span><br></pre></td></tr></table></figure><h2 id="시험-합격-팁"><a href="#시험-합격-팁" class="headerlink" title="시험 합격 팁"></a>시험 합격 팁</h2><ol><li><strong>시간 관리</strong>: 문제당 평균 7분</li><li><strong>kubectl 숙련도</strong>: 타이핑 속도 향상</li><li><strong>공식 문서 활용</strong>: 시험 중 참고 가능</li><li><strong>실전 연습</strong>: Killer.sh 반복</li></ol><h2 id="CKA-취득-후-로드맵"><a href="#CKA-취득-후-로드맵" class="headerlink" title="CKA 취득 후 로드맵"></a>CKA 취득 후 로드맵</h2><ul><li>CKAD (Developer) 취득</li><li>CKS (Security) 취득</li><li>클라우드별 전문 자격증 (AWS EKS, GCP GKE)</li><li>기술 리더십 역할</li></ul><h2 id="전체-학습-과정에서의-위치"><a href="#전체-학습-과정에서의-위치" class="headerlink" title="전체 학습 과정에서의 위치"></a>전체 학습 과정에서의 위치</h2><p>이 Kubernetes 학습은 전체 성장 로드맵의 5단계에 해당한다.</p><p><strong>이전 단계들:</strong></p><ol><li><a href="/2025/09/17/ai-era-backend-developer-survival/">AI 시대 현황 분석</a></li><li>Git 저장소 관리 (작성 중)</li><li>Redis Docker 환경 구축 (작성 중)  </li><li>Jenkins CI&#x2F;CD 파이프라인 (작성 중)</li></ol><p><strong>다음 단계들:</strong><br>6. Prometheus &amp; Grafana 모니터링 (작성 예정)<br>7. AWS 클라우드 아키텍처 (작성 예정)</p><p><strong>전체 로드맵</strong>: <a href="/2025/09/19/backend-developer-roadmap/">백엔드 개발자 성장 로드맵</a></p><hr><p><strong>시작일</strong>: 오늘부터<br><strong>목표일</strong>: 8주 후 CKA 취득</p><p>함께 Kubernetes 정복하자!</p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
          <category> DevOps </category>
          
          <category> Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 백엔드개발자 </tag>
            
            <tag> Kubernetes </tag>
            
            <tag> CKA </tag>
            
            <tag> 학습계획 </tag>
            
            <tag> 인프라 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI 시대, 백엔드 개발자가 살아남는 법</title>
      <link href="/2025/09/17/ai-era-backend-developer-survival/"/>
      <url>/2025/09/17/ai-era-backend-developer-survival/</url>
      
        <content type="html"><![CDATA[<h2 id="AI가-내-일을-가져갈까"><a href="#AI가-내-일을-가져갈까" class="headerlink" title="AI가 내 일을 가져갈까?"></a>AI가 내 일을 가져갈까?</h2><p>ChatGPT, GitHub Copilot 보면서 솔직히 좀 무서웠다.</p><p>특히 내가 주로 하던 일들:</p><ul><li>단순 CRUD API 개발</li><li>기본 DB 스키마 설계  </li><li>반복적인 배포 스크립트 작성</li><li>기본 모니터링 설정</li></ul><p>이런 건 AI가 이미 더 빠르게 해버린다.</p><span id="more"></span><h2 id="데이터로-본-현실"><a href="#데이터로-본-현실" class="headerlink" title="데이터로 본 현실"></a>데이터로 본 현실</h2><table><thead><tr><th>업무 유형</th><th>AI 대체 위험도</th></tr></thead><tbody><tr><td>단순 CRUD API</td><td>9&#x2F;10</td></tr><tr><td>반복 배포 작업</td><td>9&#x2F;10</td></tr><tr><td>기본 DB 설계</td><td>8&#x2F;10</td></tr><tr><td>복잡한 시스템 아키텍처</td><td>3&#x2F;10</td></tr><tr><td>장애 대응</td><td>2&#x2F;10</td></tr><tr><td>기술 의사결정</td><td>2&#x2F;10</td></tr></tbody></table><p>위험도 높은 건 이미 AI가 더 잘한다.</p><h2 id="그래서-어떻게-할-건데"><a href="#그래서-어떻게-할-건데" class="headerlink" title="그래서 어떻게 할 건데?"></a>그래서 어떻게 할 건데?</h2><h3 id="위험한-업무에서-탈출"><a href="#위험한-업무에서-탈출" class="headerlink" title="위험한 업무에서 탈출"></a>위험한 업무에서 탈출</h3><p><strong>Before (위험)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 매번 수동으로 하던 배포</span></span><br><span class="line">scp app.jar server:/opt/app/</span><br><span class="line">ssh server <span class="string">&quot;sudo systemctl restart app&quot;</span></span><br></pre></td></tr></table></figure><p><strong>After (안전)</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GitOps 기반 자동 배포</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">argoproj.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Application</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">source:</span></span><br><span class="line">    <span class="attr">repoURL:</span> <span class="string">https://github.com/my-org/my-app</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">k8s</span></span><br><span class="line">  <span class="attr">destination:</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://kubernetes.default.svc</span></span><br></pre></td></tr></table></figure><h3 id="AI와-협업하는-영역으로-이동"><a href="#AI와-협업하는-영역으로-이동" class="headerlink" title="AI와 협업하는 영역으로 이동"></a>AI와 협업하는 영역으로 이동</h3><p>AI가 생성한 코드를 검토하고 최적화하는 역할로 바뀌었다.</p><p><strong>AI 생성 코드</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resource &quot;aws_instance&quot; &quot;web&quot; &#123;</span><br><span class="line">  ami           = &quot;ami-12345&quot;</span><br><span class="line">  instance_type = &quot;t2.micro&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>내가 개선한 코드</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">resource &quot;aws_instance&quot; &quot;web&quot; &#123;</span><br><span class="line">  ami           = data.aws_ami.amazon_linux.id</span><br><span class="line">  instance_type = var.instance_type</span><br><span class="line">  </span><br><span class="line">  vpc_security_group_ids = [aws_security_group.web.id]</span><br><span class="line">  subnet_id              = var.private_subnet_id</span><br><span class="line">  </span><br><span class="line">  user_data = templatefile(&quot;$&#123;path.module&#125;/user_data.sh&quot;, &#123;</span><br><span class="line">    app_version = var.app_version</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  tags = merge(var.common_tags, &#123;</span><br><span class="line">    Name = &quot;$&#123;var.project&#125;-web-$&#123;var.environment&#125;&quot;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="복잡한-문제-해결에-집중"><a href="#복잡한-문제-해결에-집중" class="headerlink" title="복잡한 문제 해결에 집중"></a>복잡한 문제 해결에 집중</h3><p>AI가 못하는 것들:</p><ul><li>Kubernetes 클러스터 간헐적 네트워크 지연 이슈</li><li>멀티 리전 DB 복제 지연 최적화  </li><li>대용량 트래픽 아키텍처 재설계</li><li>레거시 시스템 데이터 동기화</li></ul><p>이런 건 경험과 직감이 필요하다.</p><h2 id="당장-시작할-것들"><a href="#당장-시작할-것들" class="headerlink" title="당장 시작할 것들"></a>당장 시작할 것들</h2><h3 id="이번-주부터"><a href="#이번-주부터" class="headerlink" title="이번 주부터"></a>이번 주부터</h3><ul><li>GitHub 포트폴리오 정리</li><li>Kubernetes 학습 시작 (CKA 목표)</li><li>기술 블로그 시작</li><li>사내 자동화 프로젝트 제안</li></ul><h3 id="3개월-목표"><a href="#3개월-목표" class="headerlink" title="3개월 목표"></a>3개월 목표</h3><ul><li>컨테이너 오케스트레이션 전문성</li><li>Infrastructure as Code 마스터</li><li>모니터링 시스템 구축 경험</li></ul><h3 id="6개월-목표"><a href="#6개월-목표" class="headerlink" title="6개월 목표"></a>6개월 목표</h3><ul><li>클라우드 아키텍처 전문가 포지셔닝</li><li>사내 개발자 플랫폼 구축 리드</li><li>오픈소스 기여 또는 컨퍼런스 발표</li></ul><h2 id="핵심-역량-개발"><a href="#핵심-역량-개발" class="headerlink" title="핵심 역량 개발"></a>핵심 역량 개발</h2><p><strong>클라우드 네이티브</strong></p><ul><li>Kubernetes, Docker, Helm</li><li>Service Mesh (Istio, Linkerd)</li><li>Observability (Prometheus, Grafana)</li></ul><p><strong>플랫폼 엔지니어링</strong></p><ul><li>Developer Experience 플랫폼 구축</li><li>CI&#x2F;CD 파이프라인 최적화</li><li>멀티클라우드 전략</li></ul><p><strong>AI&#x2F;ML 인프라</strong></p><ul><li>MLOps 파이프라인 구축</li><li>GPU 클러스터 관리</li><li>모델 서빙 아키텍처</li></ul><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>AI는 적이 아니라 더 높은 차원의 일을 할 수 있게 해주는 도구다.</p><p>단순 반복 업무는 AI에게 맡기고, 복잡한 문제 해결과 시스템 설계에 집중하자.</p><p>지금이 바로 전환할 때다.</p><h2 id="다음-단계"><a href="#다음-단계" class="headerlink" title="다음 단계"></a>다음 단계</h2><p>이제 현황 분석이 끝났으니 실제 행동에 옮겨보자.</p><p>먼저 개발 환경부터 체계적으로 정리해야 한다. 다음 글에서는 Git 저장소 관리부터 시작해서 단계별로 환경을 구축해보겠다.</p><p><strong>전체 로드맵</strong>: <a href="/2025/09/19/backend-developer-roadmap/">백엔드 개발자 성장 로드맵</a><br><strong>다음 글</strong>: Git 저장소 초기화 및 관리 (작성 중)</p>]]></content>
      
      
      <categories>
          
          <category> Career </category>
          
          <category> Backend </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 백엔드개발자 </tag>
            
            <tag> AI시대 </tag>
            
            <tag> 커리어전환 </tag>
            
            <tag> DevOps </tag>
            
            <tag> 생존전략 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
